{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef } from 'react';\nimport Springs from './springs';\nimport { ViewsProps } from './state/types-defaults';\nimport useDirection from './hooks/useDirection';\nimport useDimensionsDOM from './hooks/useDimensionsDOM';\nimport useDimensions from './hooks/useDimensions';\nimport useProportion from './hooks/useProportion';\nimport useKeyboard from './hooks/useKeyboard';\nimport useDragging from './hooks/useDragging';\nimport useMouseOver from './hooks/useMouseOver';\nimport useSelect from './hooks/useSelect';\nimport useFocus from './hooks/useFocus';\nimport useViewCount from './hooks/useViewCount';\nimport useAutoPlay from './hooks/useAutoPlay';\nimport useConfig from './hooks/useConfig';\nimport useRewind from './hooks/useRewind';\nimport usePause from './hooks/usePause';\nimport useStopOnInteraction from './hooks/useStopOnInteraction';\nimport useShowElements from './hooks/useShowElements';\nimport useSlideBy from './hooks/useSlideBy';\nimport useSlideSteps from './hooks/useSlideSteps';\nimport useSliderSize from './hooks/useSliderSize';\nimport { useStateContext } from './state';\nimport './index.css';\n\nconst SledViews = ({\n  children,\n  style,\n  width,\n  height,\n  proportion,\n  direction,\n  select,\n  slideBy,\n  showElements,\n  keyboard,\n  dragging,\n  dragDistance,\n  autoPlayInterval,\n  config,\n  pauseOnMouseOver,\n  stopOnInteraction,\n  rewind,\n  pause,\n  onSledEnd,\n  onAnimationStart,\n  onAnimationEnd\n}) => {\n  const viewsRef = useRef();\n  const [{\n    dimensions,\n    dimensionsDOM\n  }] = useStateContext();\n  useProportion(width, height, proportion);\n  useDimensionsDOM(width, height);\n  useDimensions(viewsRef);\n  useDirection(direction);\n  useFocus(viewsRef);\n  useViewCount(children);\n  useRewind(rewind);\n  usePause(pause);\n  useShowElements(showElements);\n  useSlideBy(slideBy);\n  useSliderSize();\n  useSlideSteps();\n  useStopOnInteraction(stopOnInteraction);\n  useMouseOver(pauseOnMouseOver, viewsRef);\n  useSelect(select);\n  useKeyboard(keyboard);\n  useDragging(dragging, dragDistance);\n  useAutoPlay(autoPlayInterval);\n  useConfig(config);\n  return __jsx(\"div\", {\n    className: \"sled\",\n    ref: viewsRef,\n    style: _objectSpread({}, dimensionsDOM, {}, style),\n    tabIndex: 0\n  }, __jsx(\"div\", {\n    className: \"sled-sizer\",\n    style: dimensions\n  }, __jsx(Springs, {\n    onAnimationStart: onAnimationStart,\n    onAnimationEnd: onAnimationEnd,\n    onSledEnd: onSledEnd\n  }, children)));\n};\n\nSledViews.defaultProps = ViewsProps;\nexport default SledViews;","map":null,"metadata":{},"sourceType":"module"}