{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/andreasfaust/components/react-sled/components/settings.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport Toggle from 'react-toggle';\nimport debounce from 'lodash/debounce';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { slide as Menu } from 'react-burger-menu';\nimport { useStateValue } from './state';\nimport useWindowSize from './useWindowSize';\nimport Select from 'react-select';\nconst customStyles = {\n  container: () => ({\n    width: 150,\n    position: 'relative'\n  }),\n  placeholder: () => ({\n    fontSize: '0.9rem'\n  }),\n  option: provided => _objectSpread({}, provided, {\n    fontSize: '0.9rem'\n  })\n};\n\nconst useDebounce = defaultValue => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(defaultValue);\n  const dSetValue = useRef(event => {\n    event.persist();\n    debounce(() => setValue(event.target.value), 150)();\n  });\n  return [value, dSetValue];\n};\n\nconst Wrapper = ({\n  children\n}) => {\n  const {\n    width\n  } = useWindowSize();\n  return width > 1024 ? __jsx(\"div\", {\n    className: \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, children) : __jsx(Menu, {\n    className: \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, children);\n};\n\nconst Settings = () => {\n  const [state, dispatch] = useStateValue();\n  const [proportion, setProportion] = React.useState(state.proportion);\n  const [direction, setDirection] = React.useState(state.direction);\n  const [width, setWidth] = useDebounce(state.width);\n  const [height, setHeight] = useDebounce(state.height);\n  const [autoPlayInterval, setAutoPlayInterval] = useDebounce(state.autoPlayInterval);\n  const [select, setSelect] = useDebounce(state.select);\n  useEffect(() => {\n    dispatch({\n      type: 'width',\n      value: width\n    });\n    dispatch({\n      type: 'height',\n      value: height\n    });\n    dispatch({\n      type: 'direction',\n      value: direction\n    });\n    dispatch({\n      type: 'autoPlayInterval',\n      value: +autoPlayInterval\n    });\n    dispatch({\n      type: 'proportion',\n      value: proportion\n    });\n  }, [width, height, direction, autoPlayInterval, proportion]);\n  useEffect(() => {\n    if (_parseInt(select, 10)) {\n      dispatch({\n        type: 'select',\n        value: _parseInt(select, 10)\n      });\n    }\n\n    if (select === 'prev' || select === 'next') {\n      dispatch({\n        type: 'select',\n        value: select\n      });\n    }\n  }, [select]);\n  return __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"settings__h2 bold\",\n    tabIndex: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Settings:\"), __jsx(\"div\", {\n    className: \"settings__column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"settings__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"width\"), __jsx(\"input\", {\n    type: \"text\",\n    size: 7,\n    className: \"settings__input\",\n    defaultValue: state.width,\n    onChange: event => setWidth.current(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"height\"), __jsx(\"input\", {\n    type: \"text\",\n    size: 7,\n    className: \"settings__input\",\n    defaultValue: state.height,\n    placeholder: \"auto\",\n    onChange: event => setHeight.current(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: `settings__label`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"proportion\"), __jsx(Select, {\n    className: \"settings__select\",\n    placeholder: \"2:1\",\n    onChange: option => setProportion(option.value),\n    options: [{\n      value: '1:1',\n      label: '1:1'\n    }, {\n      value: '1:2',\n      label: '1:2'\n    }, {\n      value: '2:1',\n      label: '2:1'\n    }, {\n      value: '3:1',\n      label: '3:1'\n    }, {\n      value: '3:2',\n      label: '3:2'\n    }],\n    styles: customStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label settings__label--select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"direction\"), __jsx(Select, {\n    className: \"settings__select\",\n    placeholder: \"horizontal\",\n    onChange: option => setDirection(option.value),\n    options: [{\n      value: 'horizontal',\n      label: 'horizontal'\n    }, {\n      value: 'vertical',\n      label: 'vertical'\n    }],\n    styles: customStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"select\"), __jsx(\"input\", {\n    type: \"text\",\n    size: 7,\n    className: \"settings__input\",\n    placeholder: state.select,\n    onChange: event => setSelect.current(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"showElements\"), __jsx(\"input\", {\n    type: \"number\",\n    size: 1,\n    className: \"settings__input\",\n    value: state.showElements,\n    onChange: event => dispatch({\n      type: 'showElements',\n      value: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"slideBy\"), __jsx(\"input\", {\n    type: \"number\",\n    size: 1,\n    className: \"settings__input\",\n    value: state.slideBy,\n    onChange: event => dispatch({\n      type: 'slideBy',\n      value: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"autoPlayInterval\"), __jsx(\"input\", {\n    type: \"number\",\n    size: 5,\n    className: \"settings__input\",\n    defaultValue: state.autoPlayInterval,\n    onChange: event => setAutoPlayInterval.current(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"dragDistance\"), __jsx(\"input\", {\n    type: \"text\",\n    size: 7,\n    className: \"settings__input\",\n    defaultValue: state.dragDistance,\n    onChange: event => dispatch({\n      type: 'dragDistance',\n      value: event.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"settings__column settings__column--2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"settings__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"rewind\"), __jsx(Toggle, {\n    defaultChecked: state.rewind,\n    icons: false,\n    onChange: () => dispatch({\n      type: 'rewind',\n      value: !state.rewind\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"pauseOnMouseOver\"), __jsx(Toggle, {\n    defaultChecked: state.pauseOnMouseOver,\n    icons: false,\n    onChange: () => dispatch({\n      type: 'pauseOnMouseOver',\n      value: !state.pauseOnMouseOver\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"stopOnInteraction\"), __jsx(Toggle, {\n    defaultChecked: state.stopOnInteraction,\n    icons: false,\n    onChange: () => dispatch({\n      type: 'stopOnInteraction',\n      value: !state.stopOnInteraction\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"keyboard\"), __jsx(Toggle, {\n    defaultChecked: state.keyboard,\n    icons: false,\n    onChange: () => dispatch({\n      type: 'keyboard',\n      value: !state.keyboard\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"dragging\"), __jsx(Toggle, {\n    defaultChecked: state.dragging,\n    icons: false,\n    onChange: () => dispatch({\n      type: 'dragging',\n      value: !state.dragging\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"settings__column settings__column--3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"settings__label background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3 bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"config\")), __jsx(\"label\", {\n    className: \"settings__label settings__label--config\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"mass: \", state.mass), __jsx(Slider, {\n    min: 1,\n    max: 500,\n    defaultValue: 1,\n    onChange: value => dispatch({\n      type: 'mass',\n      value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label settings__label--config\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"tension: \", state.tension), __jsx(Slider, {\n    min: 1,\n    max: 500,\n    defaultValue: 210,\n    onChange: value => dispatch({\n      type: 'tension',\n      value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label settings__label--config\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"friction: \", state.friction), __jsx(Slider, {\n    min: 1,\n    max: 500,\n    defaultValue: 20,\n    onChange: value => dispatch({\n      type: 'friction',\n      value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: \"settings__label settings__label--config\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"settings__h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, \"clamp\"), __jsx(Toggle, {\n    defaultChecked: state.clamp,\n    icons: false,\n    onChange: () => dispatch({\n      type: 'clamp',\n      value: !state.clamp\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }))));\n};\n\nexport default Settings;","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/components/settings.js"],"names":["React","useEffect","useState","useRef","Toggle","debounce","Slider","slide","Menu","useStateValue","useWindowSize","Select","customStyles","container","width","position","placeholder","fontSize","option","provided","useDebounce","defaultValue","value","setValue","dSetValue","event","persist","target","Wrapper","children","Settings","state","dispatch","proportion","setProportion","direction","setDirection","setWidth","height","setHeight","autoPlayInterval","setAutoPlayInterval","select","setSelect","type","current","label","showElements","slideBy","dragDistance","rewind","pauseOnMouseOver","stopOnInteraction","keyboard","dragging","mass","tension","friction","clamp"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport Toggle from 'react-toggle'\nimport debounce from 'lodash/debounce'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css'\nimport { slide as Menu } from 'react-burger-menu'\nimport { useStateValue } from './state'\nimport useWindowSize from './useWindowSize'\nimport Select from 'react-select'\n\nconst customStyles = {\n\n  container: () => ({\n    width: 150,\n    position: 'relative',\n  }),\n  placeholder: () => ({\n    fontSize: '0.9rem'\n  }),\n  option: (provided) => ({\n    ...provided,\n    fontSize: '0.9rem',\n  }),\n\n}\n\nconst useDebounce = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue)\n  const dSetValue = useRef((event) => {\n    event.persist()\n    debounce(() => setValue(event.target.value), 150)()\n  })\n  return [value, dSetValue]\n}\n\nconst Wrapper = ({ children }) => {\n  const { width } = useWindowSize()\n  return width > 1024\n    ? <div className='settings'>{children}</div>\n    : <Menu className='settings'>{children}</Menu>\n}\n\nconst Settings = () => {\n  const [state, dispatch] = useStateValue()\n\n  const [proportion, setProportion] = React.useState(state.proportion)\n  const [direction, setDirection] = React.useState(state.direction)\n\n  const [width, setWidth] = useDebounce(state.width)\n  const [height, setHeight] = useDebounce(state.height)\n  const [autoPlayInterval, setAutoPlayInterval] = useDebounce(state.autoPlayInterval)\n  const [select, setSelect] = useDebounce(state.select)\n\n\n  useEffect(() => {\n    dispatch({ type: 'width', value: width })\n    dispatch({ type: 'height', value: height })\n    dispatch({ type: 'direction', value: direction })\n    dispatch({ type: 'autoPlayInterval', value: +autoPlayInterval })\n    dispatch({ type: 'proportion', value: proportion })\n  }, [width, height, direction, autoPlayInterval, proportion])\n\n  useEffect(() => {\n    if (parseInt(select, 10)) {\n      dispatch({ type: 'select', value: parseInt(select, 10) })\n    }\n    if (select === 'prev' || select === 'next') {\n      dispatch({ type: 'select', value: select })\n    }\n  }, [select])\n\n  return (\n    <Wrapper>\n      <h2\n        className=\"settings__h2 bold\"\n        tabIndex=\"0\"\n      >\n        Settings:\n      </h2>\n      <div className='settings__column'>\n        <label className='settings__label'>\n          <h3 className='settings__h3'>width</h3>\n          <input\n            type='text'\n            size={7}\n            className='settings__input'\n            defaultValue={state.width}\n            onChange={(event) => setWidth.current(event)}\n          />\n        </label>\n        <label className='settings__label'>\n          <h3 className='settings__h3'>height</h3>\n          <input\n            type='text'\n            size={7}\n            className='settings__input'\n            defaultValue={state.height}\n            placeholder='auto'\n            onChange={(event) => setHeight.current(event)}\n          />\n        </label>\n        <label className={`settings__label`}>\n          <h3 className='settings__h3'>proportion</h3>\n          <Select\n            className='settings__select'\n            placeholder='2:1'\n            onChange={(option) => setProportion(option.value)}\n            options={[\n              { value: '1:1', label: '1:1' },\n              { value: '1:2', label: '1:2' },\n              { value: '2:1', label: '2:1' },\n              { value: '3:1', label: '3:1' },\n              { value: '3:2', label: '3:2' },\n            ]}\n            styles={customStyles}\n          />\n\n        </label>\n\n        <label className='settings__label settings__label--select'>\n          <h3 className='settings__h3'>direction</h3>\n          <Select\n            className='settings__select'\n            placeholder='horizontal'\n            onChange={(option) => setDirection(option.value)}\n            options={[\n              { value: 'horizontal', label: 'horizontal' },\n              { value: 'vertical', label: 'vertical' }\n            ]}\n            styles={customStyles}\n          />\n        </label>\n\n        <label className='settings__label'>\n          <h3 className='settings__h3'>select</h3>\n          <input\n            type='text'\n            size={7}\n            className='settings__input'\n            placeholder={state.select}\n            onChange={(event) => setSelect.current(event)}\n          />\n        </label>\n        <label className='settings__label'>\n          <h3 className='settings__h3'>showElements</h3>\n          <input\n            type='number'\n            size={1}\n            className='settings__input'\n            value={state.showElements}\n            onChange={(event) => dispatch({ type: 'showElements', value: event.target.value })}\n          />\n        </label>\n        <label className='settings__label'>\n          <h3 className='settings__h3'>slideBy</h3>\n          <input\n            type='number'\n            size={1}\n            className='settings__input'\n            value={state.slideBy}\n            onChange={(event) => dispatch({ type: 'slideBy', value: event.target.value })}\n          />\n        </label>\n        <label className='settings__label'>\n          <h3 className='settings__h3'>autoPlayInterval</h3>\n          <input\n            type='number'\n            size={5}\n            className='settings__input'\n            defaultValue={state.autoPlayInterval}\n            onChange={(event) => setAutoPlayInterval.current(event)}\n          />\n        </label>\n        <label className='settings__label'>\n          <h3 className='settings__h3'>dragDistance</h3>\n          <input\n            type='text'\n            size={7}\n            className='settings__input'\n            defaultValue={state.dragDistance}\n            onChange={(event) => dispatch({ type: 'dragDistance', value: event.target.value })}\n          />\n        </label>\n      </div>\n\n      <div className='settings__column settings__column--2'>\n        <label className='settings__label'>\n          <h3 className='settings__h3'>rewind</h3>\n          <Toggle\n            defaultChecked={state.rewind}\n            icons={false}\n            onChange={() => dispatch({ type: 'rewind', value: !state.rewind })}\n          />\n        </label>\n\n        <label className='settings__label'>\n          <h3 className='settings__h3'>pauseOnMouseOver</h3>\n          <Toggle\n            defaultChecked={state.pauseOnMouseOver}\n            icons={false}\n            onChange={() => dispatch({ type: 'pauseOnMouseOver', value: !state.pauseOnMouseOver })}\n          />\n        </label>\n        <label className='settings__label'>\n          <h3 className='settings__h3'>stopOnInteraction</h3>\n          <Toggle\n            defaultChecked={state.stopOnInteraction}\n            icons={false}\n            onChange={() => dispatch({ type: 'stopOnInteraction', value: !state.stopOnInteraction })}\n          />\n        </label>\n\n        <label className='settings__label'>\n          <h3 className='settings__h3'>keyboard</h3>\n          <Toggle\n            defaultChecked={state.keyboard}\n            icons={false}\n            onChange={() => dispatch({ type: 'keyboard', value: !state.keyboard })}\n          />\n        </label>\n        <label className='settings__label'>\n          <h3 className='settings__h3'>dragging</h3>\n          <Toggle\n            defaultChecked={state.dragging}\n            icons={false}\n            onChange={() => dispatch({ type: 'dragging', value: !state.dragging })}\n          />\n        </label>\n\n      </div>\n\n      <div className='settings__column settings__column--3'>\n        <label className='settings__label background'>\n          <h3 className='settings__h3 bold'>config</h3>\n        </label>\n        <label className='settings__label settings__label--config'>\n          <h3 className='settings__h3'>mass: {state.mass}</h3>\n          <Slider\n            min={1}\n            max={500}\n            defaultValue={1}\n            onChange={(value) => dispatch({ type: 'mass', value })} />\n        </label>\n        <label className='settings__label settings__label--config'>\n          <h3 className='settings__h3'>tension: {state.tension}</h3>\n          <Slider\n            min={1}\n            max={500}\n            defaultValue={210}\n            onChange={(value) => dispatch({ type: 'tension', value })} />\n        </label>\n        <label className='settings__label settings__label--config'>\n          <h3 className='settings__h3'>friction: {state.friction}</h3>\n          <Slider\n            min={1}\n            max={500}\n            defaultValue={20}\n            onChange={(value) => dispatch({ type: 'friction', value })} />\n        </label>\n        <label className='settings__label settings__label--config'>\n          <h3 className='settings__h3'>clamp</h3>\n          <Toggle\n            defaultChecked={state.clamp}\n            icons={false}\n            onChange={() => dispatch({ type: 'clamp', value: !state.clamp })}\n          />\n        </label>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}