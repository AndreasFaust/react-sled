{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clamp from '../utils/clamp';\n\nfunction getNext(currentIndex, slideSteps, rewind) {\n  if (currentIndex === slideSteps - 1 && !rewind) {\n    return clamp(currentIndex, 0, slideSteps - 1);\n  }\n\n  return (currentIndex + 1) % slideSteps;\n}\n\nfunction getPrev(currentIndex, slideSteps, rewind) {\n  if (currentIndex === 0 && !rewind) {\n    return clamp(currentIndex, 0, slideSteps - 1);\n  }\n\n  return (currentIndex - 1 + slideSteps) % slideSteps;\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case 'NEXT':\n      return _objectSpread({}, state, {\n        currentIndex: getNext(state.currentIndex, state.slideSteps, state.rewind),\n        prevIndex: state.currentIndex\n      });\n\n    case 'PREV':\n      return _objectSpread({}, state, {\n        currentIndex: getPrev(state.currentIndex, state.slideSteps, state.rewind),\n        prevIndex: state.currentIndex\n      });\n\n    case 'SELECT':\n      return _objectSpread({}, state, {\n        currentIndex: clamp(action.index, 0, state.slideSteps - 1),\n        prevIndex: state.currentIndex\n      });\n\n    case 'SET_DIRECTION':\n      return _objectSpread({}, state, {\n        direction: action.direction\n      });\n\n    case 'SET_PAUSE':\n      return _objectSpread({}, state, {\n        pause: action.pause\n      });\n\n    case 'SET_MOUSEOVER':\n      return _objectSpread({}, state, {\n        pauseOnMouseOver: action.pauseOnMouseOver\n      });\n\n    case 'SET_VIEWCOUNT':\n      return _objectSpread({}, state, {\n        viewCount: action.count\n      });\n\n    case 'SET_FOCUS':\n      return _objectSpread({}, state, {\n        hasFocus: action.focus\n      });\n\n    case 'SET_DIMENSIONS':\n      return _objectSpread({}, state, {\n        dimensions: action.dimensions\n      });\n\n    case 'SET_DIMENSIONS_DOM':\n      return _objectSpread({}, state, {\n        dimensionsDOM: action.dimensionsDOM\n      });\n\n    case 'SET_PROPORTION':\n      return _objectSpread({}, state, {\n        proportion: action.proportion\n      });\n\n    case 'SET_DRAGGING':\n      return _objectSpread({}, state, {\n        dragging: action.dragging\n      });\n\n    case 'SET_DRAG_DISTANCE':\n      return _objectSpread({}, state, {\n        dragDistance: action.dragDistance\n      });\n\n    case 'SET_AUTOPLAY':\n      return _objectSpread({}, state, {\n        autoPlayInterval: action.autoPlayInterval\n      });\n\n    case 'SET_CONFIG':\n      return _objectSpread({}, state, {\n        config: action.config\n      });\n\n    case 'SET_REWIND':\n      return _objectSpread({}, state, {\n        rewind: action.rewind\n      });\n\n    case 'SET_STOPONINTERACTION':\n      return _objectSpread({}, state, {\n        stopOnInteraction: action.stopOnInteraction\n      });\n\n    case 'SET_SLIDEBY':\n      return _objectSpread({}, state, {\n        slideBy: action.slideBy\n      });\n\n    case 'SET_SLIDESTEPS':\n      return _objectSpread({}, state, {\n        slideSteps: action.slideSteps\n      });\n\n    case 'SET_SHOWELEMENTS':\n      return _objectSpread({}, state, {\n        showElements: action.showElements\n      });\n\n    case 'SET_SLIDERSIZE':\n      return _objectSpread({}, state, {\n        sliderSize: action.sliderSize\n      });\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}