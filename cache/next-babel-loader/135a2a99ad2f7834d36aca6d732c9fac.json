{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport default function useWindowSize() {\n  function getSize() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      windowSize = _useState[0],\n      setWindowSize = _useState[1];\n\n  useEffect(function () {\n    setWindowSize(getSize());\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return function () {\n      return window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return windowSize;\n}","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/components/useWindowSize.js"],"names":["useEffect","useState","useWindowSize","getSize","width","window","innerWidth","height","innerHeight","undefined","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,WAASC,OAAT,GAAmB;AACjB,WAAO;AACLC,MAAAA,KAAK,EAAEC,MAAM,CAACC,UADT;AAELC,MAAAA,MAAM,EAAEF,MAAM,CAACG;AAFV,KAAP;AAID;;AANqC,kBAQFP,QAAQ,CAAC;AAAEG,IAAAA,KAAK,EAAEK,SAAT;AAAoBF,IAAAA,MAAM,EAAEE;AAA5B,GAAD,CARN;AAAA,MAQ/BC,UAR+B;AAAA,MAQnBC,aARmB;;AAUtCX,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,aAAa,CAACR,OAAO,EAAR,CAAb;;AAEA,aAASS,YAAT,GAAwB;AACtBD,MAAAA,aAAa,CAACR,OAAO,EAAR,CAAb;AACD;;AAEDE,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO;AAAA,aAAMP,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,KAAP;AACD,GATQ,EASN,EATM,CAAT;AAWA,SAAOF,UAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react'\n\nexport default function useWindowSize() {\n  function getSize() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight\n    }\n  }\n\n  const [windowSize, setWindowSize] = useState({ width: undefined, height: undefined })\n\n  useEffect(() => {\n    setWindowSize(getSize())\n\n    function handleResize() {\n      setWindowSize(getSize())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowSize\n}\n"]},"metadata":{},"sourceType":"module"}