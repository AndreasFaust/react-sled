{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { useStateContext } from '../state';\n\nconst useInterval = (callback, interval) => {\n  const savedCallback = useRef(callback);\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (typeof interval === 'number') {\n      let id = setInterval(tick, interval);\n      return () => clearInterval(id);\n    }\n  }, [interval]);\n};\n\nexport default (autoPlayIntervalNew => {\n  const [{\n    pause,\n    autoPlayInterval\n  }, dispatch] = useStateContext();\n  useEffect(() => {\n    if (typeof autoPlayIntervalNew === 'number') {\n      dispatch({\n        type: 'SET_AUTOPLAY',\n        autoPlayInterval: autoPlayIntervalNew\n      });\n    } else {\n      console.warn(`Sled-Error: \"autoplay\" must be of type \"number\", not \"${typeof autoPlayIntervalNew}\".`);\n    }\n  }, [autoPlayIntervalNew]);\n  useInterval(() => {\n    dispatch({\n      type: 'NEXT'\n    });\n  }, !pause && autoPlayInterval);\n});","map":null,"metadata":{},"sourceType":"module"}