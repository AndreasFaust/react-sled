{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport { useEffect } from 'react';\nimport { useStateContext } from '../state';\n\nfunction getDistance(distance, width) {\n  switch (typeof distance) {\n    case 'number':\n      return distance;\n\n    case 'string':\n      if (distance.indexOf('%') >= 0) {\n        return width / 100 * +distance.replace('%', '');\n      }\n\n      const distanceNumber = _parseInt(distance, 10);\n\n      if (distanceNumber) {\n        return distanceNumber;\n      }\n\n      console.warn('Sled-Error: dragDistance must either be a String with unit % or a number.');\n      return 40;\n\n    default:\n      return 40;\n  }\n}\n\nexport default ((dragging, dragDistance) => {\n  const [{\n    dimensions: {\n      width\n    }\n  }, dispatch] = useStateContext();\n  useEffect(() => {\n    const distance = getDistance(dragDistance, width);\n    dispatch({\n      type: 'SET_DRAG_DISTANCE',\n      dragDistance: distance\n    });\n  }, [dispatch, dragDistance, width]);\n  useEffect(() => {\n    dispatch({\n      type: 'SET_DRAGGING',\n      dragging\n    });\n  }, [dispatch, dragging]);\n});","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/sled/hooks/useDragging.ts"],"names":["useEffect","useStateContext","getDistance","distance","width","indexOf","replace","distanceNumber","console","warn","dragging","dragDistance","dimensions","dispatch","type"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,UAAhC;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAAgDC,KAAhD,EAAuE;AACrE,UAAQ,OAAOD,QAAf;AACE,SAAK,QAAL;AAAe,aAAOA,QAAP;;AACf,SAAK,QAAL;AACE,UAAIA,QAAQ,CAACE,OAAT,CAAiB,GAAjB,KAAyB,CAA7B,EAAgC;AAC9B,eAAQD,KAAK,GAAG,GAAT,GAAgB,CAACD,QAAQ,CAACG,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAAxB;AACD;;AACD,YAAMC,cAAc,GAAG,UAASJ,QAAT,EAAmB,EAAnB,CAAvB;;AACA,UAAII,cAAJ,EAAoB;AAClB,eAAOA,cAAP;AACD;;AACDC,MAAAA,OAAO,CAACC,IAAR,CAAa,2EAAb;AACA,aAAO,EAAP;;AACF;AACE,aAAO,EAAP;AAbJ;AAeD;;AAED,gBAAe,CAACC,QAAD,EAAoBC,YAApB,KAAsD;AACnE,QAAM,CAAC;AAAEC,IAAAA,UAAU,EAAE;AAAER,MAAAA;AAAF;AAAd,GAAD,EAA4BS,QAA5B,IAAwCZ,eAAe,EAA7D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMG,QAAQ,GAAGD,WAAW,CAACS,YAAD,EAAeP,KAAf,CAA5B;AACAS,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,mBAAR;AAA6BH,MAAAA,YAAY,EAAER;AAA3C,KAAD,CAAR;AACD,GAHQ,EAGN,CAACU,QAAD,EAAWF,YAAX,EAAyBP,KAAzB,CAHM,CAAT;AAKAJ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,cAAR;AAAwBJ,MAAAA;AAAxB,KAAD,CAAR;AACD,GAFQ,EAEN,CAACG,QAAD,EAAWH,QAAX,CAFM,CAAT;AAGD,CAXD","sourcesContent":["import { useEffect } from 'react'\nimport { useStateContext } from '../state'\n\nfunction getDistance(distance: string | number, width: number): number {\n  switch (typeof distance) {\n    case 'number': return distance\n    case 'string':\n      if (distance.indexOf('%') >= 0) {\n        return (width / 100) * +distance.replace('%', '')\n      }\n      const distanceNumber = parseInt(distance, 10)\n      if (distanceNumber) {\n        return distanceNumber\n      }\n      console.warn('Sled-Error: dragDistance must either be a String with unit % or a number.')\n      return 40\n    default:\n      return 40\n  }\n}\n\nexport default (dragging: boolean, dragDistance: string | number) => {\n  const [{ dimensions: { width } }, dispatch] = useStateContext()\n\n  useEffect(() => {\n    const distance = getDistance(dragDistance, width)\n    dispatch({ type: 'SET_DRAG_DISTANCE', dragDistance: distance })\n  }, [dispatch, dragDistance, width])\n\n  useEffect(() => {\n    dispatch({ type: 'SET_DRAGGING', dragging })\n  }, [dispatch, dragging])\n}\n"]},"metadata":{},"sourceType":"module"}