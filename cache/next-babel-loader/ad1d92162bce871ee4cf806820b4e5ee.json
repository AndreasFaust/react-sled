{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/andreasfaust/components/react-sled/sled/views.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef } from 'react';\nimport Springs from './springs';\nimport { ViewsProps } from './state/types-defaults';\nimport useDirection from './hooks/useDirection';\nimport useDimensions from './hooks/useDimensions';\nimport useKeyboard from './hooks/useKeyboard';\nimport useDragging from './hooks/useDragging';\nimport useMouseOver from './hooks/useMouseOver';\nimport useSelect from './hooks/useSelect';\nimport useFocus from './hooks/useFocus';\nimport useViewCount from './hooks/useViewCount';\nimport useAutoPlay from './hooks/useAutoPlay';\nimport useConfig from './hooks/useConfig';\nimport useRewind from './hooks/useRewind';\nimport usePause from './hooks/usePause';\nimport useStopOnInteraction from './hooks/useStopOnInteraction';\nimport useShowElements from './hooks/useShowElements';\nimport useSlideBy from './hooks/useSlideBy';\nimport useSlideSteps from './hooks/useSlideSteps';\nimport useSliderSize from './hooks/useSliderSize';\nimport { useStateContext } from './state';\nimport './index.css';\n\nconst SledViews = ({\n  children,\n  style,\n  width,\n  height,\n  proportion,\n  direction,\n  select,\n  slideBy,\n  showElements,\n  keyboard,\n  dragging,\n  dragDistance,\n  autoPlayInterval,\n  config,\n  pauseOnMouseOver,\n  stopOnInteraction,\n  rewind,\n  pause,\n  onSledEnd,\n  onAnimationStart,\n  onAnimationEnd\n}) => {\n  const viewsRef = useRef();\n  const [{\n    dimensionsDOM\n  }] = useStateContext();\n  useDimensions(width, height, viewsRef);\n  useDirection(direction); // const proportionClasses = useProportion(proportion)\n\n  useFocus(viewsRef);\n  useViewCount(children);\n  useRewind(rewind);\n  usePause(pause);\n  useShowElements(showElements);\n  useSlideBy(slideBy);\n  useSliderSize();\n  useSlideSteps();\n  useStopOnInteraction(stopOnInteraction);\n  useMouseOver(pauseOnMouseOver, viewsRef);\n  useSelect(select);\n  useKeyboard(keyboard);\n  useDragging(dragging, dragDistance);\n  useAutoPlay(autoPlayInterval);\n  useConfig(config);\n  return __jsx(\"div\", {\n    className: \"sled\",\n    ref: viewsRef,\n    style: _objectSpread({\n      width,\n      height\n    }, style),\n    tabIndex: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"sled-sizer\",\n    style: dimensions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Springs, {\n    onAnimationStart: onAnimationStart,\n    onAnimationEnd: onAnimationEnd,\n    onSledEnd: onSledEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, children)));\n};\n\nSledViews.defaultProps = ViewsProps;\nexport default SledViews;","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/sled/views.tsx"],"names":["React","useRef","Springs","ViewsProps","useDirection","useDimensions","useKeyboard","useDragging","useMouseOver","useSelect","useFocus","useViewCount","useAutoPlay","useConfig","useRewind","usePause","useStopOnInteraction","useShowElements","useSlideBy","useSlideSteps","useSliderSize","useStateContext","SledViews","children","style","width","height","proportion","direction","select","slideBy","showElements","keyboard","dragging","dragDistance","autoPlayInterval","config","pauseOnMouseOver","stopOnInteraction","rewind","pause","onSledEnd","onAnimationStart","onAnimationEnd","viewsRef","dimensionsDOM","dimensions","defaultProps"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\n\nimport Springs from './springs'\nimport { IViewsProps, ViewsProps } from './state/types-defaults'\n\nimport useDirection from './hooks/useDirection'\nimport useDimensions from './hooks/useDimensions'\nimport useKeyboard from './hooks/useKeyboard'\nimport useDragging from './hooks/useDragging'\nimport useMouseOver from './hooks/useMouseOver'\nimport useSelect from './hooks/useSelect'\nimport useFocus from './hooks/useFocus'\nimport useViewCount from './hooks/useViewCount'\nimport useAutoPlay from './hooks/useAutoPlay'\nimport useConfig from './hooks/useConfig'\nimport useRewind from './hooks/useRewind'\nimport usePause from './hooks/usePause'\nimport useStopOnInteraction from './hooks/useStopOnInteraction'\nimport useShowElements from './hooks/useShowElements'\nimport useSlideBy from './hooks/useSlideBy'\nimport useSlideSteps from './hooks/useSlideSteps'\nimport useSliderSize from './hooks/useSliderSize'\nimport { useStateContext } from './state'\nimport './index.css'\n\nconst SledViews: React.FC<IViewsProps> = ({\n  children,\n  style,\n  width,\n  height,\n  proportion,\n  direction,\n  select,\n  slideBy,\n  showElements,\n  keyboard,\n  dragging,\n  dragDistance,\n  autoPlayInterval,\n  config,\n  pauseOnMouseOver,\n  stopOnInteraction,\n  rewind,\n  pause,\n  onSledEnd,\n  onAnimationStart,\n  onAnimationEnd\n}) => {\n\n  const viewsRef = useRef<HTMLDivElement>()\n  const [{ dimensionsDOM }] = useStateContext()\n\n\n  useDimensions(width, height, viewsRef)\n  useDirection(direction)\n  // const proportionClasses = useProportion(proportion)\n  useFocus(viewsRef)\n  useViewCount(children)\n  useRewind(rewind)\n  usePause(pause)\n\n  useShowElements(showElements)\n  useSlideBy(slideBy)\n  useSliderSize()\n  useSlideSteps()\n\n  useStopOnInteraction(stopOnInteraction)\n  useMouseOver(pauseOnMouseOver, viewsRef)\n  useSelect(select)\n  useKeyboard(keyboard)\n  useDragging(dragging, dragDistance)\n  useAutoPlay(autoPlayInterval)\n\n  useConfig(config)\n\n  return (\n    <div\n      className='sled'\n      ref={viewsRef}\n      style={{\n        width,\n        height,\n        ...style,\n      }}\n      tabIndex={0}\n    >\n      <div\n        className='sled-sizer'\n        style={dimensions}\n      >\n        <Springs\n          onAnimationStart={onAnimationStart}\n          onAnimationEnd={onAnimationEnd}\n          onSledEnd={onSledEnd}\n        >\n          {children}\n        </Springs>\n      </div>\n    </div>\n  )\n}\n\nSledViews.defaultProps = ViewsProps\n\nexport default SledViews\n"]},"metadata":{},"sourceType":"module"}