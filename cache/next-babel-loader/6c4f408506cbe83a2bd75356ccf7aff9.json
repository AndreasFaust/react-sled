{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from 'react';\nexport default (function (width, height, ref) {\n  var _useStateContext = useStateContext(),\n      _useStateContext2 = _slicedToArray(_useStateContext, 2),\n      _useStateContext2$ = _useStateContext2[0],\n      dimensionsDOM = _useStateContext2$.dimensionsDOM,\n      proportion = _useStateContext2$.proportion,\n      dispatch = _useStateContext2[1];\n\n  React.useEffect(function () {\n    if (!width && !height) {\n      dispatch({\n        type: 'SET_DIMENSIONS_DOM',\n        dimensionsDOM: {\n          width: '100%',\n          height: null\n        }\n      });\n      dispatch({\n        type: 'SET_PROPORTION',\n        proportion: '2:1'\n      });\n      return;\n    }\n\n    dispatch({\n      type: 'SET_DIMENSIONS_DOM',\n      dimensionsDOM: {\n        width: width,\n        height: height\n      }\n    });\n  }, [width, height]);\n});","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/sled/hooks/useDimensionsDOM.ts"],"names":["React","width","height","ref","useStateContext","dimensionsDOM","proportion","dispatch","useEffect","type"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,gBAAe,UAACC,KAAD,EAAoBC,MAApB,EAAwCC,GAAxC,EAAsD;AAAA,yBACjBC,eAAe,EADE;AAAA;AAAA;AAAA,MAC1DC,aAD0D,sBAC1DA,aAD0D;AAAA,MAC3CC,UAD2C,sBAC3CA,UAD2C;AAAA,MAC7BC,QAD6B;;AAGnEP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AACpB,QAAI,CAACP,KAAD,IAAU,CAACC,MAAf,EAAuB;AACrBK,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,oBADC;AAEPJ,QAAAA,aAAa,EAAE;AAAEJ,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB;AAFR,OAAD,CAAR;AAIAK,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,gBAAR;AAA0BH,QAAAA,UAAU,EAAE;AAAtC,OAAD,CAAR;AACA;AACD;;AAEDC,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,oBADC;AAEPJ,MAAAA,aAAa,EAAE;AAAEJ,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,MAAM,EAANA;AAAT;AAFR,KAAD,CAAR;AAKD,GAfD,EAeG,CAACD,KAAD,EAAQC,MAAR,CAfH;AAiBD,CApBD","sourcesContent":["\nimport React from 'react'\n\nexport default (width: TDimension, height: TDimension, ref: TRef) => {\n  const [{ dimensionsDOM, proportion }, dispatch] = useStateContext()\n\n  React.useEffect(() => {\n    if (!width && !height) {\n      dispatch({\n        type: 'SET_DIMENSIONS_DOM',\n        dimensionsDOM: { width: '100%', height: null }\n      })\n      dispatch({ type: 'SET_PROPORTION', proportion: '2:1' })\n      return\n    }\n\n    dispatch({\n      type: 'SET_DIMENSIONS_DOM',\n      dimensionsDOM: { width, height }\n    })\n\n  }, [width, height])\n\n}\n"]},"metadata":{},"sourceType":"module"}