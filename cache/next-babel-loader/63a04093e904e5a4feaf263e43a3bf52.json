{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport { useStateContext } from '../../state';\nexport var useDirectionDisabled = function useDirectionDisabled(select) {\n  var _useStateContext = useStateContext(),\n      _useStateContext2 = _slicedToArray(_useStateContext, 1),\n      _useStateContext2$ = _useStateContext2[0],\n      rewind = _useStateContext2$.rewind,\n      currentIndex = _useStateContext2$.currentIndex,\n      viewCount = _useStateContext2$.viewCount;\n\n  var _useState = useState(false),\n      disabled = _useState[0],\n      setDisabled = _useState[1];\n\n  useEffect(function () {\n    if (typeof select === 'string') {\n      if (rewind) {\n        setDisabled(false);\n        return;\n      }\n\n      if (select === 'next' && currentIndex === viewCount - 1) {\n        setDisabled(true);\n      } else if (select === 'prev' && currentIndex === 0) {\n        setDisabled(true);\n      } else {\n        setDisabled(false);\n      }\n    }\n  }, [currentIndex, rewind]);\n  return disabled;\n};","map":null,"metadata":{},"sourceType":"module"}