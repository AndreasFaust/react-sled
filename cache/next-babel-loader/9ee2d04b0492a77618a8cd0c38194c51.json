{"ast":null,"code":"// https://github.com/chodorowicz/ts-debounce/blob/master/src/index.ts\nexport function debounce(func) {\n  var waitMilliseconds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    isImmediate: false\n  };\n  var timeoutId;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var context = this;\n\n    var doLater = function doLater() {\n      timeoutId = undefined;\n\n      if (!options.isImmediate) {\n        func.apply(context, args);\n      }\n    };\n\n    var shouldCallNow = options.isImmediate && timeoutId === undefined;\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(doLater, waitMilliseconds);\n\n    if (shouldCallNow) {\n      func.apply(context, args);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}