{"ast":null,"code":"import { useStateContext } from '../../state';\nimport { useDirectionDisabled } from './useDirectionDisabled';\n\nfunction getClassName(type, select, className) {\n  const [{\n    currentIndex\n  }] = useStateContext();\n  const directionDisabled = useDirectionDisabled(select);\n  const baseClass = 'sled-control';\n  const typeClass = `${baseClass}-${type}`;\n  const typeClassSpecific = `${typeClass}-${select}`;\n  const distinctClass = `${baseClass}-${className || type + '-default'}`;\n  const disabledClasses = [`${baseClass}-disabled`, `${typeClass}-disabled`, `${distinctClass}-disabled`];\n  const activeClasses = [`${baseClass}-active`, `${typeClass}-active`, `${distinctClass}-active`];\n  const classes = [baseClass, typeClass, typeClassSpecific, distinctClass];\n\n  if (select === currentIndex) {\n    // isActive\n    return [...classes, ...activeClasses].join(' ');\n  }\n\n  if (directionDisabled) {\n    return [...classes, ...disabledClasses].join(' ');\n  }\n\n  return classes.join(' ');\n}\n\nexport default ((select, className) => {\n  switch (typeof select) {\n    case 'number':\n      return getClassName('index', select, className);\n\n    case 'string':\n    default:\n      return getClassName('direction', select, className);\n  }\n});","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/sled/control/hooks/useClassName.ts"],"names":["useStateContext","useDirectionDisabled","getClassName","type","select","className","currentIndex","directionDisabled","baseClass","typeClass","typeClassSpecific","distinctClass","disabledClasses","activeClasses","classes","join"],"mappings":"AACA,SAASA,eAAT,QAAgC,aAAhC;AACA,SAASC,oBAAT,QAAqC,wBAArC;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAAmDC,MAAnD,EAAoEC,SAApE,EAA+F;AAC7F,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,IAAqBN,eAAe,EAA1C;AAEA,QAAMO,iBAAiB,GAAGN,oBAAoB,CAACG,MAAD,CAA9C;AAEA,QAAMI,SAAiB,GAAG,cAA1B;AACA,QAAMC,SAAiB,GAAI,GAAED,SAAU,IAAGL,IAAK,EAA/C;AACA,QAAMO,iBAAyB,GAAI,GAAED,SAAU,IAAGL,MAAO,EAAzD;AACA,QAAMO,aAAqB,GAAI,GAAEH,SAAU,IAAGH,SAAS,IAAIF,IAAI,GAAG,UAAW,EAA7E;AACA,QAAMS,eAAyB,GAAG,CAC/B,GAAEJ,SAAU,WADmB,EAE/B,GAAEC,SAAU,WAFmB,EAG/B,GAAEE,aAAc,WAHe,CAAlC;AAKA,QAAME,aAAuB,GAAG,CAC7B,GAAEL,SAAU,SADiB,EAE7B,GAAEC,SAAU,SAFiB,EAG7B,GAAEE,aAAc,SAHa,CAAhC;AAMA,QAAMG,OAAiB,GAAG,CACxBN,SADwB,EAExBC,SAFwB,EAGxBC,iBAHwB,EAIxBC,aAJwB,CAA1B;;AAOA,MAAIP,MAAM,KAAKE,YAAf,EAA6B;AAAE;AAC7B,WAAO,CAAC,GAAGQ,OAAJ,EAAa,GAAGD,aAAhB,EAA+BE,IAA/B,CAAoC,GAApC,CAAP;AACD;;AACD,MAAIR,iBAAJ,EAAuB;AACrB,WAAO,CAAC,GAAGO,OAAJ,EAAa,GAAGF,eAAhB,EAAiCG,IAAjC,CAAsC,GAAtC,CAAP;AACD;;AACD,SAAOD,OAAO,CAACC,IAAR,CAAa,GAAb,CAAP;AACD;;AAED,gBAAe,CAACX,MAAD,EAAkBC,SAAlB,KAAwC;AACrD,UAAQ,OAAOD,MAAf;AACE,SAAK,QAAL;AACE,aAAOF,YAAY,CAAC,OAAD,EAAUE,MAAV,EAAkBC,SAAlB,CAAnB;;AACF,SAAK,QAAL;AACA;AACE,aAAOH,YAAY,CAAC,WAAD,EAAcE,MAAd,EAAsBC,SAAtB,CAAnB;AALJ;AAOD,CARD","sourcesContent":["import { TSelect } from \"../../state/types-defaults\"\nimport { useStateContext } from '../../state'\nimport { useDirectionDisabled } from './useDirectionDisabled'\n\nfunction getClassName(type: 'index' | 'direction', select: TSelect, className: string): string {\n  const [{ currentIndex }] = useStateContext()\n\n  const directionDisabled = useDirectionDisabled(select)\n\n  const baseClass: string = 'sled-control'\n  const typeClass: string = `${baseClass}-${type}`\n  const typeClassSpecific: string = `${typeClass}-${select}`\n  const distinctClass: string = `${baseClass}-${className || type + '-default'}`\n  const disabledClasses: string[] = [\n    `${baseClass}-disabled`,\n    `${typeClass}-disabled`,\n    `${distinctClass}-disabled`\n  ]\n  const activeClasses: string[] = [\n    `${baseClass}-active`,\n    `${typeClass}-active`,\n    `${distinctClass}-active`\n  ]\n\n  const classes: string[] = [\n    baseClass,\n    typeClass,\n    typeClassSpecific,\n    distinctClass,\n  ]\n\n  if (select === currentIndex) { // isActive\n    return [...classes, ...activeClasses].join(' ')\n  }\n  if (directionDisabled) {\n    return [...classes, ...disabledClasses].join(' ')\n  }\n  return classes.join(' ')\n}\n\nexport default (select: TSelect, className: string) => {\n  switch (typeof select) {\n    case 'number':\n      return getClassName('index', select, className)\n    case 'string':\n    default:\n      return getClassName('direction', select, className)\n  }\n}"]},"metadata":{},"sourceType":"module"}