{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andreasfaust/components/react-sled/sled/springs.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useStateContext } from './state';\nimport useDragGesture from './hooks/useDragGesture';\nimport useFocus from './hooks/useFocus';\nimport useCursor from './hooks/useCursor';\nimport useX from './hooks/useX';\nimport { useSliderStyles, useViewStyles } from './hooks/useContainerStyles';\n\nvar SledSprings = function SledSprings(_ref) {\n  var onAnimationStart = _ref.onAnimationStart,\n      onAnimationEnd = _ref.onAnimationEnd,\n      onSledEnd = _ref.onSledEnd,\n      children = _ref.children;\n\n  var _useStateContext = useStateContext(),\n      _useStateContext2 = _slicedToArray(_useStateContext, 2),\n      _useStateContext2$ = _useStateContext2[0],\n      currentIndex = _useStateContext2$.currentIndex,\n      viewCount = _useStateContext2$.viewCount,\n      direction = _useStateContext2$.direction,\n      _useStateContext2$$di = _useStateContext2$.dimensions,\n      width = _useStateContext2$$di.width,\n      height = _useStateContext2$$di.height,\n      config = _useStateContext2$.config,\n      dispatch = _useStateContext2[1];\n\n  var cursor = useCursor();\n  var x = useX();\n\n  var _useSpring = useSpring(function () {\n    return {\n      x: 0,\n      cursor: cursor,\n      config: config,\n      immediate: true\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      props = _useSpring2[0],\n      set = _useSpring2[1];\n\n  var springRef = React.useRef();\n  useFocus(springRef);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dimensionsUpdated = _React$useState2[0],\n      setDimensionsUpdated = _React$useState2[1];\n\n  useEffect(function () {\n    setDimensionsUpdated(true);\n  }, [width, height]);\n  useEffect(function () {\n    if (!dimensionsUpdated) return;\n    setDimensionsUpdated(false);\n    set({\n      x: x,\n      immediate: true,\n      onStart: null,\n      onRest: null\n    });\n  }, [x, dimensionsUpdated]);\n  useEffect(function () {\n    if (dimensionsUpdated) return;\n    set({\n      config: config,\n      x: x,\n      cursor: cursor,\n      immediate: false,\n      onStart: function onStart() {\n        dispatch({\n          type: 'SET_PAUSE',\n          pause: true\n        });\n        if (typeof onAnimationStart === 'function') onAnimationStart();\n      },\n      onRest: function onRest() {\n        dispatch({\n          type: 'SET_PAUSE',\n          pause: false\n        });\n        if (typeof onAnimationEnd === 'function') onAnimationEnd();\n\n        if (currentIndex === viewCount - 1) {\n          if (typeof onSledEnd === 'function') onSledEnd();\n        }\n      }\n    });\n  }, [x, currentIndex, dimensionsUpdated, viewCount, cursor]);\n  var bind = useDragGesture(set);\n  var sliderStyles = useSliderStyles();\n  var viewStyles = useViewStyles();\n  return __jsx(animated.div, _extends({}, bind ? bind() : {}, {\n    className: \"sled-slider\",\n    ref: springRef,\n    style: _objectSpread({}, sliderStyles, {\n      transform: direction === 'horizontal' ? props.x.to(function (x) {\n        return \"translate3d(\".concat(x, \"px,0,0)\");\n      }) : props.x.to(function (x) {\n        return \"translate3d(0,\".concat(x, \"px,0)\");\n      }),\n      cursor: props.cursor\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.Children.map(children, function (child) {\n    return __jsx(\"div\", {\n      className: \"sled-element\",\n      style: viewStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, child);\n  }));\n};\n\nexport default SledSprings;","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/sled/springs.tsx"],"names":["React","useEffect","useSpring","animated","useStateContext","useDragGesture","useFocus","useCursor","useX","useSliderStyles","useViewStyles","SledSprings","onAnimationStart","onAnimationEnd","onSledEnd","children","currentIndex","viewCount","direction","dimensions","width","height","config","dispatch","cursor","x","immediate","props","set","springRef","useRef","useState","dimensionsUpdated","setDimensionsUpdated","onStart","onRest","type","pause","bind","sliderStyles","viewStyles","transform","to","Children","map","child"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nimport { useStateContext } from './state'\nimport useDragGesture from './hooks/useDragGesture'\nimport useFocus from './hooks/useFocus'\nimport useCursor from './hooks/useCursor'\nimport useX from './hooks/useX'\nimport { useSliderStyles, useViewStyles } from './hooks/useContainerStyles'\n\ninterface IProps {\n  onAnimationStart(): void\n  onAnimationEnd(): void\n  onSledEnd(): void\n  children?: React.ReactNode\n}\n\nconst SledSprings: React.FC<IProps> = ({\n  onAnimationStart,\n  onAnimationEnd,\n  onSledEnd,\n  children\n}) => {\n  const [{\n    currentIndex,\n    viewCount,\n    direction,\n    dimensions: { width, height },\n    config,\n  }, dispatch] = useStateContext()\n\n  const cursor = useCursor()\n  const x = useX()\n\n  const [props, set] = useSpring(() => ({\n    x: 0,\n    cursor,\n    config,\n    immediate: true\n  }))\n  const springRef = React.useRef()\n\n  useFocus(springRef)\n\n  const [dimensionsUpdated, setDimensionsUpdated] = React.useState(false)\n\n  useEffect(() => {\n    setDimensionsUpdated(true)\n  }, [width, height])\n\n  useEffect(() => {\n    if (!dimensionsUpdated) return\n    setDimensionsUpdated(false)\n    set({\n      x,\n      immediate: true,\n      onStart: null,\n      onRest: null,\n    })\n  }, [x, dimensionsUpdated])\n\n  useEffect(() => {\n    if (dimensionsUpdated) return\n    set({\n      config,\n      x,\n      cursor,\n      immediate: false,\n      onStart() {\n        dispatch({ type: 'SET_PAUSE', pause: true })\n        if (typeof onAnimationStart === 'function') onAnimationStart()\n      },\n      onRest() {\n        dispatch({ type: 'SET_PAUSE', pause: false })\n        if (typeof onAnimationEnd === 'function') onAnimationEnd()\n        if (currentIndex === viewCount - 1) {\n          if (typeof onSledEnd === 'function') onSledEnd()\n        }\n      },\n    })\n  }, [x, currentIndex, dimensionsUpdated, viewCount, cursor])\n\n  const bind = useDragGesture(set)\n\n  const sliderStyles = useSliderStyles()\n  const viewStyles = useViewStyles()\n\n  return (\n    <animated.div\n      {...bind ? bind() : {}}\n      className='sled-slider'\n      ref={springRef}\n      style={{\n        ...sliderStyles,\n        transform: direction === 'horizontal'\n          ? props.x.to((x) => `translate3d(${x}px,0,0)`)\n          : props.x.to((x) => `translate3d(0,${x}px,0)`),\n        cursor: props.cursor,\n      }}\n    >\n      {\n        React.Children.map(children, child => (\n          <div\n            className=\"sled-element\"\n            style={viewStyles}\n          >\n            {child}\n          </div>\n        ))\n      }\n    </animated.div >\n  )\n}\n\n\nexport default SledSprings\n"]},"metadata":{},"sourceType":"module"}