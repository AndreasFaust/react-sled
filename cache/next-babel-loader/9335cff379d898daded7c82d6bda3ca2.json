{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useStateContext } from '../../state';\nimport { useDirectionDisabled } from './useDirectionDisabled';\n\nfunction getClassName(type, select, className) {\n  var _useStateContext = useStateContext(),\n      _useStateContext2 = _slicedToArray(_useStateContext, 1),\n      currentIndex = _useStateContext2[0].currentIndex;\n\n  var directionDisabled = useDirectionDisabled(select);\n  var baseClass = 'sled-control';\n  var typeClass = \"\".concat(baseClass, \"-\").concat(type);\n  var typeClassSpecific = \"\".concat(typeClass, \"-\").concat(select);\n  var distinctClass = \"\".concat(baseClass, \"-\").concat(className || type + '-default');\n  var disabledClasses = [\"\".concat(baseClass, \"-disabled\"), \"\".concat(typeClass, \"-disabled\"), \"\".concat(distinctClass, \"-disabled\")];\n  var activeClasses = [\"\".concat(baseClass, \"-active\"), \"\".concat(typeClass, \"-active\"), \"\".concat(distinctClass, \"-active\")];\n  var classes = [baseClass, typeClass, typeClassSpecific, distinctClass];\n\n  if (select === currentIndex) {\n    // isActive\n    return [].concat(classes, activeClasses).join(' ');\n  }\n\n  if (directionDisabled) {\n    return [].concat(classes, disabledClasses).join(' ');\n  }\n\n  return classes.join(' ');\n}\n\nexport default (function (select, className) {\n  switch (typeof select) {\n    case 'number':\n      return getClassName('index', select, className);\n\n    case 'string':\n    default:\n      return getClassName('direction', select, className);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}