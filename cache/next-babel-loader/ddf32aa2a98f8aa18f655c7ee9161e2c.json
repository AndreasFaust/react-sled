{"ast":null,"code":"import { useDrag } from 'react-use-gesture';\nimport { useStateContext } from '../state';\nexport default (set => {\n  const [{\n    dragging,\n    dragDistance,\n    dimensions: {\n      width,\n      height\n    },\n    currentIndex,\n    direction,\n    stopOnInteraction,\n    showElements,\n    slideBy\n  }, dispatch] = useStateContext();\n  const bind = useDrag(({\n    down,\n    movement: [xDelta, yDelta],\n    direction: [xDir, yDir],\n    distance,\n    cancel,\n    canceled\n  }) => {\n    if (canceled) return;\n\n    if (stopOnInteraction) {\n      dispatch({\n        type: 'SET_AUTOPLAY',\n        autoPlayInterval: undefined\n      });\n    }\n\n    if (down && distance > dragDistance) {\n      const dirValue = direction === 'horizontal' ? xDir : yDir;\n      dispatch({\n        type: dirValue > 0 ? 'PREV' : 'NEXT',\n        pause: true\n      });\n      cancel();\n    }\n\n    set(() => {\n      const x = direction === 'horizontal' ? -currentIndex * (width / showElements * slideBy) + (down ? xDelta : 0) : -currentIndex * (height / showElements * slideBy) + (down ? yDelta : 0);\n      return {\n        x,\n        immediate: false,\n        cursor: down ? 'grabbing' : 'grab',\n        onStart: undefined,\n        onRest: undefined\n      };\n    });\n    dispatch({\n      type: 'SET_PAUSE',\n      pause: true\n    });\n  });\n  return dragging && bind;\n});","map":null,"metadata":{},"sourceType":"module"}