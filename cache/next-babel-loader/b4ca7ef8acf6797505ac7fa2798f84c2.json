{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useEffect } from 'react';\nimport { useStateContext } from '../state';\nexport default (function (rewind) {\n  var _useStateContext = useStateContext(),\n      _useStateContext2 = _slicedToArray(_useStateContext, 2),\n      dispatch = _useStateContext2[1];\n\n  useEffect(function () {\n    dispatch({\n      type: 'SET_REWIND',\n      rewind: rewind\n    });\n  }, [rewind]);\n});","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/sled/hooks/useRewind.ts"],"names":["useEffect","useStateContext","rewind","dispatch","type"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,gBAAe,UAACC,MAAD,EAAqB;AAAA,yBACbD,eAAe,EADF;AAAA;AAAA,MACzBE,QADyB;;AAElCH,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,YAAR;AAAsBF,MAAAA,MAAM,EAANA;AAAtB,KAAD,CAAR;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAGD,CALD","sourcesContent":["import { useEffect } from 'react'\nimport { useStateContext } from '../state'\n\nexport default (rewind: boolean) => {\n  const [, dispatch] = useStateContext()\n  useEffect(() => {\n    dispatch({ type: 'SET_REWIND', rewind })\n  }, [rewind])\n}\n"]},"metadata":{},"sourceType":"module"}