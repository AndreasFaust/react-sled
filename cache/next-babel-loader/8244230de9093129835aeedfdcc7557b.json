{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useStateContext } from '../../state';\n\nvar onClickFunction = function onClickFunction(select) {\n  var _useStateContext = useStateContext(),\n      _useStateContext2 = _slicedToArray(_useStateContext, 2),\n      stopOnInteraction = _useStateContext2[0].stopOnInteraction,\n      dispatch = _useStateContext2[1];\n\n  function onClick() {\n    if (stopOnInteraction) {\n      dispatch({\n        type: 'SET_AUTOPLAY',\n        autoPlayInterval: undefined\n      });\n    }\n\n    if (typeof select === 'number') {\n      dispatch({\n        type: 'SELECT',\n        index: select\n      });\n    } else {\n      dispatch({\n        type: select === 'next' ? 'NEXT' : 'PREV'\n      });\n    }\n  }\n\n  return onClick;\n};\n\nexport default onClickFunction;","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/sled/control/hooks/useClick.ts"],"names":["useStateContext","onClickFunction","select","stopOnInteraction","dispatch","onClick","type","autoPlayInterval","undefined","index"],"mappings":";AACA,SAASA,eAAT,QAAgC,aAAhC;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAA8B;AAAA,yBACVF,eAAe,EADL;AAAA;AAAA,MAC3CG,iBAD2C,wBAC3CA,iBAD2C;AAAA,MACtBC,QADsB;;AAGpD,WAASC,OAAT,GAAmB;AACjB,QAAIF,iBAAJ,EAAuB;AACrBC,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,gBAAgB,EAAEC;AAA1C,OAAD,CAAR;AACD;;AACD,QAAI,OAAON,MAAP,KAAkB,QAAtB,EAAgC;AAC9BE,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,QAAR;AAAkBG,QAAAA,KAAK,EAAEP;AAAzB,OAAD,CAAR;AACD,KAFD,MAEO;AACLE,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEJ,MAAM,KAAK,MAAX,GAAoB,MAApB,GAA6B;AAArC,OAAD,CAAR;AACD;AACF;;AACD,SAAOG,OAAP;AACD,CAdD;;AAgBA,eAAeJ,eAAf","sourcesContent":["import React from 'react'\nimport { useStateContext } from '../../state'\nimport { TSelect } from \"../../state/types-defaults\"\n\ninterface IReturn {\n  (): void;\n}\n\nconst onClickFunction = (select: TSelect): IReturn => {\n  const [{ stopOnInteraction }, dispatch] = useStateContext()\n\n  function onClick() {\n    if (stopOnInteraction) {\n      dispatch({ type: 'SET_AUTOPLAY', autoPlayInterval: undefined })\n    }\n    if (typeof select === 'number') {\n      dispatch({ type: 'SELECT', index: select })\n    } else {\n      dispatch({ type: select === 'next' ? 'NEXT' : 'PREV' })\n    }\n  }\n  return onClick\n}\n\nexport default onClickFunction"]},"metadata":{},"sourceType":"module"}