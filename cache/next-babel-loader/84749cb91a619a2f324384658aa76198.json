{"ast":null,"code":"// https://github.com/chodorowicz/ts-debounce/blob/master/src/index.ts\nexport function debounce(func) {\n  var waitMilliseconds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    isImmediate: false\n  };\n  var timeoutId;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var context = this;\n\n    var doLater = function doLater() {\n      timeoutId = undefined;\n\n      if (!options.isImmediate) {\n        func.apply(context, args);\n      }\n    };\n\n    var shouldCallNow = options.isImmediate && timeoutId === undefined;\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(doLater, waitMilliseconds);\n\n    if (shouldCallNow) {\n      func.apply(context, args);\n    }\n  };\n}","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/sled/utils/debounce.ts"],"names":["debounce","func","waitMilliseconds","options","isImmediate","timeoutId","args","context","doLater","undefined","apply","shouldCallNow","clearTimeout","setTimeout"],"mappings":"AAAA;AAQA,OAAO,SAASA,QAAT,CACLC,IADK,EAMF;AAAA,MAJHC,gBAIG,uEAJgB,EAIhB;AAAA,MAHHC,OAGG,uEAHgB;AACjBC,IAAAA,WAAW,EAAE;AADI,GAGhB;AACH,MAAIC,SAAJ;AAEA,SAAO,YAAqC;AAAA,sCAAbC,IAAa;AAAbA,MAAAA,IAAa;AAAA;;AAC1C,QAAMC,OAAO,GAAG,IAAhB;;AAEA,QAAMC,OAAO,GAAG,SAAVA,OAAU,GAAY;AAC1BH,MAAAA,SAAS,GAAGI,SAAZ;;AACA,UAAI,CAACN,OAAO,CAACC,WAAb,EAA0B;AACxBH,QAAAA,IAAI,CAACS,KAAL,CAAWH,OAAX,EAAoBD,IAApB;AACD;AACF,KALD;;AAOA,QAAMK,aAAa,GAAGR,OAAO,CAACC,WAAR,IAAuBC,SAAS,KAAKI,SAA3D;;AAEA,QAAIJ,SAAS,KAAKI,SAAlB,EAA6B;AAC3BG,MAAAA,YAAY,CAACP,SAAD,CAAZ;AACD;;AAEDA,IAAAA,SAAS,GAAGQ,UAAU,CAACL,OAAD,EAAUN,gBAAV,CAAtB;;AAEA,QAAIS,aAAJ,EAAmB;AACjBV,MAAAA,IAAI,CAACS,KAAL,CAAWH,OAAX,EAAoBD,IAApB;AACD;AACF,GArBD;AAsBD","sourcesContent":["// https://github.com/chodorowicz/ts-debounce/blob/master/src/index.ts\n\nexport type Procedure = (...args: any[]) => void;\n\nexport type Options = {\n  isImmediate: boolean,\n}\n\nexport function debounce<F extends Procedure>(\n  func: F,\n  waitMilliseconds = 50,\n  options: Options = {\n    isImmediate: false\n  },\n): F {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined\n\n  return function (this: any, ...args: any[]) {\n    const context = this\n\n    const doLater = function () {\n      timeoutId = undefined\n      if (!options.isImmediate) {\n        func.apply(context, args)\n      }\n    }\n\n    const shouldCallNow = options.isImmediate && timeoutId === undefined\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId)\n    }\n\n    timeoutId = setTimeout(doLater, waitMilliseconds)\n\n    if (shouldCallNow) {\n      func.apply(context, args)\n    }\n  } as any\n}\n"]},"metadata":{},"sourceType":"module"}