{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport { useStateContext } from '../state';\nexport default function () {\n  var _useStateContext = useStateContext(),\n      _useStateContext2 = _slicedToArray(_useStateContext, 1),\n      _useStateContext2$ = _useStateContext2[0],\n      direction = _useStateContext2$.direction,\n      _useStateContext2$$di = _useStateContext2$.dimensions,\n      width = _useStateContext2$$di.width,\n      height = _useStateContext2$$di.height,\n      showElements = _useStateContext2$.showElements,\n      slideBy = _useStateContext2$.slideBy,\n      currentIndex = _useStateContext2$.currentIndex;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      x = _React$useState2[0],\n      setX = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (direction === 'horizontal') {\n      setX(-currentIndex * (width / showElements * slideBy));\n    } else {\n      setX(-currentIndex * (height / showElements * slideBy));\n    }\n  }, [direction, width, height, showElements, slideBy, currentIndex]);\n  return x;\n}","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/sled/hooks/useX.ts"],"names":["React","useStateContext","direction","dimensions","width","height","showElements","slideBy","currentIndex","useState","x","setX","useEffect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,eAAe,YAAY;AAAA,yBACmEA,eAAe,EADlF;AAAA;AAAA;AAAA,MAChBC,SADgB,sBAChBA,SADgB;AAAA,iDACLC,UADK;AAAA,MACSC,KADT,yBACSA,KADT;AAAA,MACgBC,MADhB,yBACgBA,MADhB;AAAA,MAC0BC,YAD1B,sBAC0BA,YAD1B;AAAA,MACwCC,OADxC,sBACwCA,OADxC;AAAA,MACiDC,YADjD,sBACiDA,YADjD;;AAAA,wBAEPR,KAAK,CAACS,QAAN,CAAe,CAAf,CAFO;AAAA;AAAA,MAElBC,CAFkB;AAAA,MAEfC,IAFe;;AAGzBX,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAM;AACpB,QAAIV,SAAS,KAAK,YAAlB,EAAgC;AAC9BS,MAAAA,IAAI,CAAC,CAACH,YAAD,IAAiBJ,KAAK,GAAGE,YAAR,GAAuBC,OAAxC,CAAD,CAAJ;AACD,KAFD,MAEO;AACLI,MAAAA,IAAI,CAAC,CAACH,YAAD,IAAiBH,MAAM,GAAGC,YAAT,GAAwBC,OAAzC,CAAD,CAAJ;AACD;AACF,GAND,EAMG,CAACL,SAAD,EAAYE,KAAZ,EAAmBC,MAAnB,EAA2BC,YAA3B,EAAyCC,OAAzC,EAAkDC,YAAlD,CANH;AAQA,SAAOE,CAAP;AACD","sourcesContent":["import React from 'react'\nimport { useStateContext } from '../state'\n\nexport default function () {\n  const [{ direction, dimensions: { width, height }, showElements, slideBy, currentIndex }] = useStateContext()\n  const [x, setX] = React.useState(0)\n  React.useEffect(() => {\n    if (direction === 'horizontal') {\n      setX(-currentIndex * (width / showElements * slideBy))\n    } else {\n      setX(-currentIndex * (height / showElements * slideBy))\n    }\n  }, [direction, width, height, showElements, slideBy, currentIndex])\n\n  return x\n}\n"]},"metadata":{},"sourceType":"module"}