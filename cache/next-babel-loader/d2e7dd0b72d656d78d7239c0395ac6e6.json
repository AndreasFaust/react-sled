{"ast":null,"code":"import { useEffect } from 'react';\nimport { useStateContext } from '../state';\n\nconst useFocus = ref => {\n  const [, dispatch] = useStateContext();\n  useEffect(() => {\n    function onFocus() {\n      dispatch({\n        type: 'SET_FOCUS',\n        focus: true\n      });\n    }\n\n    function onBlur() {\n      dispatch({\n        type: 'SET_FOCUS',\n        focus: false\n      });\n    }\n\n    ref.current.addEventListener('focus', onFocus);\n    ref.current.addEventListener('blur', onBlur);\n    return () => {\n      ref.current.removeEventListener('focus', onFocus);\n      ref.current.removeEventListener('blur', onBlur);\n    };\n  }, []);\n};\n\nexport default useFocus;","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/sled/hooks/useFocus.ts"],"names":["useEffect","useStateContext","useFocus","ref","dispatch","onFocus","type","focus","onBlur","current","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,UAAhC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAiD;AAChE,QAAM,GAAGC,QAAH,IAAeH,eAAe,EAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,aAASK,OAAT,GAAmB;AACjBD,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OAAD,CAAR;AACD;;AACD,aAASC,MAAT,GAAkB;AAChBJ,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OAAD,CAAR;AACD;;AACDJ,IAAAA,GAAG,CAACM,OAAJ,CAAYC,gBAAZ,CAA6B,OAA7B,EAAsCL,OAAtC;AACAF,IAAAA,GAAG,CAACM,OAAJ,CAAYC,gBAAZ,CAA6B,MAA7B,EAAqCF,MAArC;AACA,WAAO,MAAM;AACXL,MAAAA,GAAG,CAACM,OAAJ,CAAYE,mBAAZ,CAAgC,OAAhC,EAAyCN,OAAzC;AACAF,MAAAA,GAAG,CAACM,OAAJ,CAAYE,mBAAZ,CAAgC,MAAhC,EAAwCH,MAAxC;AACD,KAHD;AAID,GAbQ,EAaN,EAbM,CAAT;AAcD,CAjBD;;AAmBA,eAAeN,QAAf","sourcesContent":["import { useEffect } from 'react'\nimport { useStateContext } from '../state'\n\nconst useFocus = (ref: React.MutableRefObject<HTMLDivElement>) => {\n  const [, dispatch] = useStateContext()\n\n  useEffect(() => {\n    function onFocus() {\n      dispatch({ type: 'SET_FOCUS', focus: true })\n    }\n    function onBlur() {\n      dispatch({ type: 'SET_FOCUS', focus: false })\n    }\n    ref.current.addEventListener('focus', onFocus)\n    ref.current.addEventListener('blur', onBlur)\n    return () => {\n      ref.current.removeEventListener('focus', onFocus)\n      ref.current.removeEventListener('blur', onBlur)\n    }\n  }, [])\n}\n\nexport default useFocus\n"]},"metadata":{},"sourceType":"module"}