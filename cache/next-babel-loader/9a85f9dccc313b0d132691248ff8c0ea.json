{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useRef, useEffect } from 'react';\nimport { useStateContext } from '../state';\n\nvar useInterval = function useInterval(callback, interval) {\n  var savedCallback = useRef(callback);\n  useEffect(function () {\n    savedCallback.current = callback;\n  });\n  useEffect(function () {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (typeof interval === 'number') {\n      var id = setInterval(tick, interval);\n      return function () {\n        return clearInterval(id);\n      };\n    }\n  }, [interval]);\n};\n\nexport default (function (autoPlayIntervalNew) {\n  var _useStateContext = useStateContext(),\n      _useStateContext2 = _slicedToArray(_useStateContext, 2),\n      _useStateContext2$ = _useStateContext2[0],\n      pause = _useStateContext2$.pause,\n      autoPlayInterval = _useStateContext2$.autoPlayInterval,\n      dispatch = _useStateContext2[1];\n\n  useEffect(function () {\n    if (typeof autoPlayIntervalNew === 'number') {\n      dispatch({\n        type: 'SET_AUTOPLAY',\n        autoPlayInterval: autoPlayIntervalNew\n      });\n    } else {\n      console.warn(\"Sled-Error: \\\"autoplay\\\" must be of type \\\"number\\\", not \\\"\".concat(typeof autoPlayIntervalNew, \"\\\".\"));\n    }\n  }, [autoPlayIntervalNew]);\n  useInterval(function () {\n    dispatch({\n      type: 'NEXT'\n    });\n  }, !pause && autoPlayInterval);\n});","map":null,"metadata":{},"sourceType":"module"}