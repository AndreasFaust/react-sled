{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clamp from '../utils/clamp';\n\nfunction getNext(currentIndex, slideSteps, rewind) {\n  if (currentIndex === slideSteps - 1 && !rewind) {\n    return clamp(currentIndex, 0, slideSteps - 1);\n  }\n\n  return (currentIndex + 1) % slideSteps;\n}\n\nfunction getPrev(currentIndex, slideSteps, rewind) {\n  if (currentIndex === 0 && !rewind) {\n    return clamp(currentIndex, 0, slideSteps - 1);\n  }\n\n  return (currentIndex - 1 + slideSteps) % slideSteps;\n}\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case 'NEXT':\n      return _objectSpread({}, state, {\n        currentIndex: getNext(state.currentIndex, state.slideSteps, state.rewind),\n        prevIndex: state.currentIndex\n      });\n\n    case 'PREV':\n      return _objectSpread({}, state, {\n        currentIndex: getPrev(state.currentIndex, state.slideSteps, state.rewind),\n        prevIndex: state.currentIndex\n      });\n\n    case 'SELECT':\n      return _objectSpread({}, state, {\n        currentIndex: clamp(action.index, 0, state.slideSteps - 1),\n        prevIndex: state.currentIndex\n      });\n\n    case 'SET_DIRECTION':\n      return _objectSpread({}, state, {\n        direction: action.direction\n      });\n\n    case 'SET_PAUSE':\n      return _objectSpread({}, state, {\n        pause: action.pause\n      });\n\n    case 'SET_MOUSEOVER':\n      return _objectSpread({}, state, {\n        pauseOnMouseOver: action.pauseOnMouseOver\n      });\n\n    case 'SET_VIEWCOUNT':\n      return _objectSpread({}, state, {\n        viewCount: action.count\n      });\n\n    case 'SET_FOCUS':\n      return _objectSpread({}, state, {\n        hasFocus: action.focus\n      });\n\n    case 'SET_DIMENSIONS':\n      return _objectSpread({}, state, {\n        dimensions: action.dimensions\n      });\n\n    case 'SET_DIMENSIONS_DOM':\n      return _objectSpread({}, state, {\n        dimensionsDOM: action.dimensionsDOM\n      });\n\n    case 'SET_PROPORTION':\n      return _objectSpread({}, state, {\n        proportion: action.proportion\n      });\n\n    case 'SET_DRAGGING':\n      return _objectSpread({}, state, {\n        dragging: action.dragging\n      });\n\n    case 'SET_DRAG_DISTANCE':\n      return _objectSpread({}, state, {\n        dragDistance: action.dragDistance\n      });\n\n    case 'SET_AUTOPLAY':\n      return _objectSpread({}, state, {\n        autoPlayInterval: action.autoPlayInterval\n      });\n\n    case 'SET_CONFIG':\n      return _objectSpread({}, state, {\n        config: action.config\n      });\n\n    case 'SET_REWIND':\n      return _objectSpread({}, state, {\n        rewind: action.rewind\n      });\n\n    case 'SET_STOPONINTERACTION':\n      return _objectSpread({}, state, {\n        stopOnInteraction: action.stopOnInteraction\n      });\n\n    case 'SET_SLIDEBY':\n      return _objectSpread({}, state, {\n        slideBy: action.slideBy\n      });\n\n    case 'SET_SLIDESTEPS':\n      return _objectSpread({}, state, {\n        slideSteps: action.slideSteps\n      });\n\n    case 'SET_SHOWELEMENTS':\n      return _objectSpread({}, state, {\n        showElements: action.showElements\n      });\n\n    case 'SET_SLIDERSIZE':\n      return _objectSpread({}, state, {\n        sliderSize: action.sliderSize\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/andreasfaust/components/react-sled/sled/state/reducer.ts"],"names":["clamp","getNext","currentIndex","slideSteps","rewind","getPrev","reducer","state","action","type","prevIndex","index","direction","pause","pauseOnMouseOver","viewCount","count","hasFocus","focus","dimensions","dimensionsDOM","proportion","dragging","dragDistance","autoPlayInterval","config","stopOnInteraction","slideBy","showElements","sliderSize"],"mappings":"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","sourcesContent":["import clamp from '../utils/clamp'\nimport { IState, TDirection } from './types-defaults'\nimport { SpringConfig } from 'react-spring'\n\nfunction getNext(currentIndex: number, slideSteps: number, rewind: boolean) {\n  if (currentIndex === slideSteps - 1 && !rewind) {\n    return clamp(currentIndex, 0, slideSteps - 1)\n  }\n  return (currentIndex + 1) % slideSteps\n}\nfunction getPrev(currentIndex: number, slideSteps: number, rewind: boolean) {\n  if (currentIndex === 0 && !rewind) {\n    return clamp(currentIndex, 0, slideSteps - 1)\n  }\n  return (currentIndex - 1 + slideSteps) % slideSteps\n}\n\nexport type ActionType =\n  | { type: 'NEXT' }\n  | { type: 'PREV' }\n  | { type: 'SELECT', index: number }\n  | { type: 'SET_PAUSE', pause: boolean }\n  | { type: 'SET_DIRECTION', direction: TDirection }\n  | { type: 'SET_MOUSEOVER', pauseOnMouseOver: boolean }\n  | { type: 'SET_VIEWCOUNT', count: number }\n  | { type: 'SET_FOCUS', focus: boolean }\n  | { type: 'SET_DIMENSIONS', dimensions: { width: number, height: number } }\n  | { type: 'SET_PROPORTION', proportion?: string }\n  | { type: 'SET_DRAGGING', dragging: boolean }\n  | { type: 'SET_DRAG_DISTANCE', dragDistance: string | number }\n  | { type: 'SET_AUTOPLAY', autoPlayInterval?: number }\n  | { type: 'SET_CONFIG', config: SpringConfig }\n  | { type: 'SET_REWIND', rewind: boolean }\n  | { type: 'SET_STOPONINTERACTION', stopOnInteraction: boolean }\n  | { type: 'SET_SHOWELEMENTS', showElements: number }\n  | { type: 'SET_SLIDEBY', slideBy: number }\n  | { type: 'SET_SLIDESTEPS', slideSteps: number }\n  | { type: 'SET_SLIDERSIZE', sliderSize: number }\n\n\nexport function reducer(state: IState, action: ActionType): IState {\n  switch (action.type) {\n    case 'NEXT': return {\n      ...state,\n      currentIndex: getNext(state.currentIndex, state.slideSteps, state.rewind),\n      prevIndex: state.currentIndex\n    }\n    case 'PREV': return {\n      ...state,\n      currentIndex: getPrev(state.currentIndex, state.slideSteps, state.rewind),\n      prevIndex: state.currentIndex\n    }\n    case 'SELECT': return {\n      ...state,\n      currentIndex: clamp(action.index, 0, state.slideSteps - 1),\n      prevIndex: state.currentIndex\n    }\n    case 'SET_DIRECTION': return {\n      ...state,\n      direction: action.direction\n    }\n    case 'SET_PAUSE': return {\n      ...state,\n      pause: action.pause\n    }\n    case 'SET_MOUSEOVER': return {\n      ...state,\n      pauseOnMouseOver: action.pauseOnMouseOver\n    }\n    case 'SET_VIEWCOUNT': return {\n      ...state,\n      viewCount: action.count\n    }\n    case 'SET_FOCUS': return {\n      ...state,\n      hasFocus: action.focus\n    }\n    case 'SET_DIMENSIONS': return {\n      ...state,\n      dimensions: action.dimensions\n    }\n    case 'SET_DIMENSIONS_DOM': return {\n      ...state,\n      dimensionsDOM: action.dimensionsDOM\n    }\n    case 'SET_PROPORTION': return {\n      ...state,\n      proportion: action.proportion\n    }\n    case 'SET_DRAGGING': return {\n      ...state,\n      dragging: action.dragging\n    }\n    case 'SET_DRAG_DISTANCE': return {\n      ...state,\n      dragDistance: action.dragDistance\n    }\n    case 'SET_AUTOPLAY': return {\n      ...state,\n      autoPlayInterval: action.autoPlayInterval\n    }\n    case 'SET_CONFIG': return {\n      ...state,\n      config: action.config\n    }\n    case 'SET_REWIND': return {\n      ...state,\n      rewind: action.rewind\n    }\n    case 'SET_STOPONINTERACTION': return {\n      ...state,\n      stopOnInteraction: action.stopOnInteraction\n    }\n    case 'SET_SLIDEBY': return {\n      ...state,\n      slideBy: action.slideBy\n    }\n    case 'SET_SLIDESTEPS': return {\n      ...state,\n      slideSteps: action.slideSteps\n    }\n    case 'SET_SHOWELEMENTS': return {\n      ...state,\n      showElements: action.showElements\n    }\n    case 'SET_SLIDERSIZE': return {\n      ...state,\n      sliderSize: action.sliderSize\n    }\n    default: return state\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}